---
apiVersion: v1
kind: Service
metadata:
  name: kube-prometheus-prometheus
  namespace: monitoring
  annotations:
    cloud.google.com/backend-config: '{"default": "admin-whitelist"}'
spec:
  selector:
    app: prometheus
  ports:
    - name: http
      port: 80
      targetPort: 9090
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: kube-prometheus-alertmanager
  namespace: monitoring
  annotations:
    cloud.google.com/backend-config: '{"default": "admin-whitelist"}'
spec:
  selector:
    app: alertmanager
  ports:
    - name: http
      port: 80
      targetPort: 9093
      protocol: TCP
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: monitoring-ssl-certificate
  namespace: monitoring
spec:
  domains:
    - "grafana.monitoring.ctf.maplebacon.org"
    - "kibana.monitoring.ctf.maplebacon.org"
    - "prometheus.monitoring.ctf.maplebacon.org"
    - "alertmanager.monitoring.ctf.maplebacon.org"
---
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: ssl-redirect
  namespace: monitoring
spec:
  redirectToHttps:
    enabled: true
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: admin-whitelist
  namespace: monitoring
spec:
  securityPolicy:
    name: admin-whitelist
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitoring
  namespace: monitoring
  annotations:
    networking.gke.io/v1beta1.FrontendConfig: ssl-redirect
    networking.gke.io/managed-certificates: monitoring-ssl-certificate
spec:
  rules:
    - host: grafana.monitoring.ctf.maplebacon.org
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 3000
    - host: kibana.monitoring.ctf.maplebacon.org
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: elasticsearch-kibana
                port:
                  number: 5601
    - host: prometheus.monitoring.ctf.maplebacon.org
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kube-prometheus-prometheus
                port:
                  number: 80
    - host: alertmanager.monitoring.ctf.maplebacon.org
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kube-prometheus-alertmanager
                port:
                  number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-output
  namespace: monitoring
data:
  fluentd.conf: |-
    # Ignore fluentd own events
    <match fluent.**>
      @type null
    </match>

    # TCP input to receive logs from the forwarders
    <source>
      @type forward
      bind 0.0.0.0
      port 24224
    </source>

    # HTTP input for the liveness and readiness probes
    <source>
      @type http
      bind 0.0.0.0
      port 9880
    </source>

    # Throw the healthcheck to the standard output instead of forwarding it
    <match fluentd.healthcheck>
      @type stdout
    </match>

    # Send the logs to the standard output
    <match **>
      @type elasticsearch
      include_tag_key true
      host "elasticsearch.monitoring.svc.cluster.local"
      port "9200"

      <buffer>
        @type file
        path /opt/bitnami/fluentd/logs/buffers/logs.buffer
        flush_thread_count 2
        flush_interval 5s
      </buffer>
    </match>
---
# yamllint disable rule:line-length
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: monitoring
data:
  fluentd.conf: |-
    ################################################################
    # HTTP input for the liveness and readiness probes
    <source>
      @type http
      bind 0.0.0.0
      port 9880
    </source>

    # This source gets all logs from local docker host
    @include pods-kind-fluent.conf
    @include forward-fluent.conf
  pods-kind-fluent.conf: |-
    <source>
      @type tail
      read_from_head true
      tag kubernetes.*
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      exclude_path ["/var/log/containers/fluent*"]
      <parse>
        @type cri
        merge_cri_fields false
        time_key time
        keep_time_key true
      </parse>
    </source>
    <filter kubernetes.**>
      @type kubernetes_metadata
      @id filter_kube_metadata
      kubernetes_url "#{ENV['FLUENT_FILTER_KUBERNETES_URL'] || 'https://' + ENV.fetch('KUBERNETES_SERVICE_HOST') + ':' + ENV.fetch('KUBERNETES_SERVICE_PORT') + '/api'}"
      verify_ssl "#{ENV['KUBERNETES_VERIFY_SSL'] || true}"
      ca_file "#{ENV['KUBERNETES_CA_FILE']}"
      skip_labels "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_LABELS'] || 'false'}"
      skip_container_metadata "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_CONTAINER_METADATA'] || 'false'}"
      skip_master_url "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_MASTER_URL'] || 'false'}"
      skip_namespace_metadata "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_NAMESPACE_METADATA'] || 'false'}"
    </filter>
  forward-fluent.conf: |-
    # Forward all logs to the aggregators
    <match **>
      @type forward
      <server>
        host fluentd-aggregator.monitoring.svc.cluster.local
        port 24224
      </server>
      <buffer>
        @type file
        path /opt/bitnami/fluentd/logs/buffers/logs.buffer
        flush_thread_count 2
        flush_interval 5s
      </buffer>
    </match>
# yamllint enable rule:line-length
